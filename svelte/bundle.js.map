{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal.mjs","../src/components/Navbar.svelte","../src/components/Menu.svelte","../node_modules/svelte/transition.mjs","../src/components/NewsCard.svelte","../src/components/News.svelte","../src/components/Footer.svelte","../src/pages/Main.svelte","../src/pages/Task1.svelte","../src/pages/Task2.svelte","../src/pages/Task3.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? requestAnimationFrame : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, start: start_time = now() + delay, end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now$$1 => {\n        if (!started && now$$1 >= start_time) {\n            started = true;\n        }\n        if (started && now$$1 >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now$$1 - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        const b = node.getBoundingClientRect();\n        if (a.left !== b.left || a.top !== b.top) {\n            const style = getComputedStyle(node);\n            const transform = style.transform === 'none' ? '' : style.transform;\n            node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n        }\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_render.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_render.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_binding_callback(fn) {\n    binding_callbacks.push(fn);\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.shift()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        while (render_callbacks.length) {\n            const callback = render_callbacks.pop();\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_render);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_render.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nlet outros;\nfunction group_outros() {\n    outros = {\n        remaining: 0,\n        callbacks: []\n    };\n}\nfunction check_outros() {\n    if (!outros.remaining) {\n        run_all(outros.callbacks);\n    }\n}\nfunction on_outro(callback) {\n    outros.callbacks.push(callback);\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick$$1(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        task = loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(1, 0);\n                    cleanup();\n                    return running = false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (typeof config === 'function') {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.remaining += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        loop(now$$1 => {\n            if (running) {\n                if (now$$1 >= end_time) {\n                    tick$$1(0, 1);\n                    if (!--group.remaining) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.callbacks);\n                    }\n                    return false;\n                }\n                if (now$$1 >= start_time) {\n                    const t = easing((now$$1 - start_time) / duration);\n                    tick$$1(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (typeof config === 'function') {\n        wait().then(() => {\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick: tick$$1 = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.remaining += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick$$1(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now$$1 => {\n                if (pending_program && now$$1 > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now$$1 >= running_program.end) {\n                        tick$$1(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.remaining)\n                                    run_all(running_program.group.callbacks);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now$$1 >= running_program.start) {\n                        const p = now$$1 - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick$$1(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (typeof config === 'function') {\n                wait().then(() => {\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        on_outro(() => {\n                            block.d(1);\n                            info.blocks[i] = null;\n                        });\n                        block.o(1);\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            if (block.i)\n                block.i(1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    on_outro(() => {\n        destroy_block(block, lookup);\n    });\n    block.o(1);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        if (block.i)\n            block.i(1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_render: [],\n            after_render: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction get_store_value(store) {\n    let value;\n    store.subscribe(_ => value = _)();\n    return value;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_render } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens after the initial afterUpdate. Because\n    // afterUpdate callbacks happen in reverse order (inner first)\n    // we schedule onMount callbacks before afterUpdate callbacks\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_render.forEach(add_render_callback);\n}\nfunction destroy(component, detaching) {\n    if (component.$$) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal: not_equal$$1,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_render: [],\n        after_render: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_render);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            $$.fragment.c();\n        }\n        if (options.intro && component.$$.fragment.i)\n            component.$$.fragment.i();\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr$$1, oldValue, newValue) {\n            this[attr$$1] = newValue;\n        }\n        $destroy() {\n            destroy(this, true);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy(this, true);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { create_animation, fix_position, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, object_without_properties, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, destroy_block, outro_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, group_outros, check_outros, on_outro, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, now, raf, set_now, set_raf, bind, mount_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    const dispatch = createEventDispatcher();\r\n</script>\r\n\r\n<style>\r\n    nav {\r\n        position: fixed;\r\n        top: 0px;\r\n        line-height: 58px;\r\n        z-index: 3;\r\n    }\r\n\r\n    .nav-wrapper .brand-logo {\r\n        cursor: pointer;\r\n        width: 50px;\r\n        height: 50px;\r\n        margin: 7px 10px 7px 0;\r\n        background-size: cover;\r\n        background-image: url(images/logo.png);\r\n    }\r\n\r\n    .nav-wrapper {\r\n        margin-left: px;\r\n    }\r\n\r\n    .nav-wrapper .left > span,  \r\n    .nav-wrapper .center > span {\r\n        font-size: 1.4em;\r\n    }\r\n\r\n    .nav-wrapper .material-icons {\r\n        display: inline-block\r\n    }\r\n\r\n    .nav-wrapper .sidenav-trigger {\r\n        display: inline-block\r\n    }\r\n\r\n    @media screen and (max-width: 600px) {\r\n        .nav-wrapper .brand-logo  {\r\n        height: 42px;\r\n        width: 42px;\r\n        }\r\n\r\n       .nav-wrapper .welcome {\r\n           display: none;\r\n       }\r\n    }\r\n</style>\r\n\r\n<nav>\r\n    <div class=\"nav-wrapper\">\r\n        <div class=\"brand-logo right\" on:click=\"{() => dispatch('handleRoute', 'main')}\"></div>\r\n        <ul class=\"left\">\r\n            <a href=\"#!\" data-target=\"slide-out\" class=\"sidenav-trigger\">\r\n                <i class=\"material-icons\">menu</i>\r\n            </a>\r\n        </ul>\r\n        <ul class=\"center\">\r\n            <span class=\"welcome\">𝖒𝖆𝖐𝖊 𝖌𝖔𝖑𝖆𝖓𝖌 𝖌𝖗𝖊𝖆𝖙 𝖆𝖌𝖆𝖎𝖓</span>\r\n        </ul>\r\n    </div>\r\n</nav>","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    const dispatch = createEventDispatcher();\r\n</script>\r\n\r\n<ul id=\"slide-out\" class=\"sidenav\">\r\n    <li><a a href=\"#!\" class=\"subheader\">Меню сайта</a></li>\r\n    <li><div class=\"divider\"></div></li>\r\n    <li><a href=\"#!\" on:click=\"{() => dispatch('handleRoute', 'main')}\"><i class=\"material-icons\">home</i>Главная страница</a></li>\r\n    <li><a href=\"#!\" on:click=\"{() => dispatch('handleRoute', 'task1')}\"><i class=\"material-icons\">assignment</i>Задание 1</a></li>\r\n    <li><a href=\"#!\" on:click=\"{() => dispatch('handleRoute', 'task2')}\"><i class=\"material-icons\">assignment</i>Задание 2</a></li>\r\n    <li><a href=\"#!\" on:click=\"{() => dispatch('handleRoute', 'task3')}\"><i class=\"material-icons\">assignment</i>Задание 3</a></li>\r\n</ul>","import { cubicOut, cubicInOut } from './easing';\nimport { is_function, assign } from './internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\n\nfunction fade(node, { delay = 0, duration = 400 }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px);\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { fade, fly, slide, scale, draw, crossfade };\n","<script>\r\n    import { fade } from 'svelte/transition';\r\n\r\n    export let title = '';\r\n    export let image = '';\r\n    export let link = '';\r\n</script>\r\n\r\n<style>\r\n\r\n.news-image {\r\n    height: 140px;\r\n    width: 100%;\r\n    background-position: center;\r\n    background-size: cover;\r\n}\r\n\r\n.card .card-action a:not(.btn):not(.btn-large):not(.btn-small):not(.btn-large):not(.btn-floating) {\r\n    color: #424242;\r\n}\r\n\r\n.card .card-action a:not(.btn):not(.btn-large):not(.btn-small):not(.btn-large):not(.btn-floating):hover {\r\n    color: #9e9e9e;\r\n}\r\n</style>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col s12 m12\">\r\n        <div class=\"card\" in:fade={{delay: 50, duration: 300}}>\r\n            <div class=\"card-content\">\r\n                <div class=\"card-header\">{title}</div>\r\n                <div class=\"news-image\" style=\"background-image: url({image})\"></div>\r\n            </div>\r\n            <div class=\"card-action\">\r\n                    <a target=\"_blank\" href={link}>Перейти в статью</a>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import NewsCard from './NewsCard.svelte';\r\n\r\n    let news = [\r\n        {\r\n            title: 'Предложение: встроенная функция проверки ошибок Go, try',\r\n            image: 'https://tehnojam.pro/uploads/images/00/00/24/2017/03/27/4302bd.png',\r\n            link: 'https://github.com/golang/proposal/blob/master/design/32437-try-builtin.md#proposal-a-built-in-go-error-check-function-try'\r\n        },\r\n        {\r\n            title: 'Переосмысление визуального программирования с помощью Go',\r\n            image: 'https://divan.dev/images/vpl_cover.png',\r\n            link: 'https://divan.dev/posts/visual_programming_go/'\r\n        },\r\n                {\r\n            title: 'Предметная гимнастика в Golang',\r\n            image: 'https://cdn-images-1.medium.com/max/1600/1*1VRNk8Lr73wQ24lB8P41OQ.png',\r\n            link: 'https://dev.to/eminetto/object-calisthenics-in-golang-1h75'\r\n        }\r\n    ];\r\n</script>\r\n\r\n<h4>Новости</h4>\r\n\r\n{#each news as singleNews}\r\n    <NewsCard \r\n        title={singleNews.title} \r\n        image={singleNews.image}\r\n        link={singleNews.link}/>\r\n{/each}\r\n\r\n\r\n","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    let year = (new Date).getFullYear();\r\n</script>\r\n\r\n<footer class=\"page-footer grey darken-2\">\r\n    <div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col l6 s12\">\r\n        <h5 class=\"white-text\">24 вариант</h5>\r\n        <p class=\"grey-text text-lighten-4\">Интернет-программирование</p>\r\n        </div>\r\n        <div class=\"col l4 offset-l2 s12\">\r\n        <h5 class=\"white-text\">Задания</h5>\r\n        <ul>\r\n            <li><a class=\"grey-text text-lighten-3\" href=\"#!\" on:click=\"{() => dispatch('handleRoute', 'task1')}\">Задание 1</a></li>\r\n            <li><a class=\"grey-text text-lighten-3\" href=\"#!\" on:click=\"{() => dispatch('handleRoute', 'task2')}\">Задание 2</a></li>\r\n            <li><a class=\"grey-text text-lighten-3\" href=\"#!\" on:click=\"{() => dispatch('handleRoute', 'task3')}\">Задание 3</a></li>\r\n        </ul>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"footer-copyright\">\r\n    <div class=\"container\">\r\n    © {year} Роман Зубков\r\n    <a class=\"grey-text text-lighten-4 right\" href=\"#!\" on:click=\"{() => dispatch('handleRoute', 'main')}\">На главную</a>\r\n    </div>\r\n    </div>\r\n</footer>","<script>\r\n    import { fade } from 'svelte/transition';\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    function btnText() {\r\n        return (window.innerWidth > 400) ? 'перейти' : '=>';\r\n    }\r\n</script>\r\n\r\n<div class=\"row\" in:fade=\"{{delay: 50, duration: 300}}\">\r\n    <div class=\"col s12 m12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-content\">\r\n                <div class=\"card-header\">Интернет-программирование, 24 вариант</div>\r\n                <div class=\"task\">\r\n                    <ul class=\"collection\">\r\n                        <li class=\"collection-item avatar\">\r\n                            <i class=\"material-icons circle\">assignment</i>\r\n                            <span class=\"title\">Задание 1</span>\r\n                            <p class=\"text\"> \r\n                                Создать HTML-страницу, которая при загрузке случайным образом формирует \r\n                                год (в пределах 1900 и 1999), месяц и число и определяет, \r\n                                каким днем недели оказалась эта дата.\r\n                            </p>\r\n                            <a href=\"#!\" on:click={() => dispatch('handleRoute', 'task1')} class=\"secondary-content btn-small waves-effect waves-light collection-btn\">{btnText()}</a>\r\n                        </li>\r\n                        <li class=\"collection-item avatar\">\r\n                            <i class=\"material-icons circle\">assignment</i>\r\n                            <span class=\"title\">Задание 2</span>\r\n                            <p class=\"text\"> \r\n                                Для объекта String написать функцию isAlpha(), \r\n                                которая возвращает true, если строка состоит только из букв \r\n                                латинского алфавита, и false - в противном случае.\r\n                            </p>\r\n                            <a href=\"#!\" on:click={() => dispatch('handleRoute', 'task2')} class=\"secondary-content btn-small waves-effect waves-light collection-btn\">{btnText()}</a>\r\n                        </li>\r\n                        <li class=\"collection-item avatar\">\r\n                            <i class=\"material-icons circle\">assignment</i>\r\n                            <span class=\"title\">Задание 3</span>\r\n                            <p class=\"text\"> \r\n                                Сделайте форму, в которой есть поля, для ввода фамилии, имени и отчества. \r\n                                Как только пользователь ввел информацию в любое из полей и перешел в\r\n                                другое (или просто кликнул мышкой на пустом месте), первая буква слова,\r\n                                записанного в поле, должна немедленно преобразоваться в заглавную.\r\n                            </p>\r\n                            <a href=\"#!\" on:click={() => dispatch('handleRoute', 'task3')} class=\"secondary-content btn-small waves-effect waves-light collection-btn\">{btnText()}</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<script>\r\n    import { fade } from 'svelte/transition';\r\n    \r\n    let minYear = 1900;\r\n    let maxYear = 1999;\r\n\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 0;\r\n\r\n    let randomDate = {};\r\n\r\n    const monthDays = {\r\n        0: 31,\r\n        1: isLeapYear() ? 29 : 28,\r\n        2: 31,\r\n        3: 30,\r\n        4: 30,\r\n        5: 31,\r\n        6: 30,\r\n        7: 31,\r\n        8: 30,\r\n        9: 31,\r\n        10: 30,\r\n        11: 31,\r\n    }\r\n\r\n    const monthLabels = {\r\n        0: 'января',\r\n        1: 'февраля',\r\n        2: 'марта',\r\n        3: 'апреля',\r\n        4: 'мая',\r\n        5: 'июня',\r\n        6: 'июля',\r\n        7: 'августа',\r\n        8: 'сентября',\r\n        9: 'октября',\r\n        10: 'нобяря',\r\n        11: 'декабря',\r\n    }\r\n\r\n    const weekLabels = {\r\n        0: 'понедельник',\r\n        1: 'вторник',\r\n        2: 'среда',\r\n        3: 'четверг',\r\n        4: 'пятница',\r\n        5: 'суббота',\r\n        6: 'воскресенье'\r\n    }\r\n\r\n    function generateDateTime() {\r\n        year = getRandomYear();\r\n        month = getRandomMoth();\r\n        day = generateRandomDayByMonth(month);\r\n\r\n        return new Date(year, month, day);\r\n    }\r\n\r\n    function getRandomYear() {\r\n        return (Math.random() * (maxYear - minYear) + minYear).toFixed(0);\r\n    }\r\n\r\n    function getRandomMoth() {\r\n        return (Math.random() * (11 - 0) + 0).toFixed(0);\r\n    }\r\n\r\n    // get max of month from monthDays\r\n    function generateRandomDayByMonth(month) {\r\n        return (Math.random() * (monthDays[month] - 1) + 1).toFixed(0);\r\n    }\r\n\r\n    // check if year is leap\r\n    function isLeapYear() {\r\n        return ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\r\n    }\r\n\r\n    function initDate() {\r\n        let generatedDateTime = generateDateTime();\r\n\r\n        randomDate = {\r\n            year: generatedDateTime.getFullYear(),\r\n            month: monthLabels[generatedDateTime.getMonth()],\r\n            day: generatedDateTime.getDate(),\r\n            week: weekLabels[generatedDateTime.getDay()],\r\n        }\r\n    }\r\n\r\n    initDate();\r\n</script>\r\n\r\n<div class=\"row\" in:fade=\"{{delay: 50, duration: 300}}\">\r\n    <div class=\"col s12 m12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-content\">\r\n                <div class=\"card-header\">Вариант 24, задание 1</div>\r\n                <div class=\"task\">\r\n                    <p>Задание:</p>\r\n                    <blockquote>\r\n                    Создать HTML-страницу, которая при загрузке случайным образом формирует год \r\n                    (в пределах 1900 и 1999), месяц и число и определяет, \r\n                    каким днем недели оказалась эта дата.\r\n                    </blockquote>\r\n                </div>\r\n                <div class=\"answer\">\r\n                    <p>Решение:</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col s6\">\r\n                                <input bind:value={minYear} type=\"number\">\r\n                                <span>минимальная дата</span>\r\n                            </div>\r\n                            <div class=\"col s6\">\r\n                              <input bind:value={maxYear} type=\"number\">\r\n                              <span>максимальная дата</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>Случайно сгенерированная дата: \r\n                        <span>{randomDate.day} {randomDate.month} {randomDate.year}, {randomDate.week}</span>\r\n                    </div>\r\n                    <br>\r\n                    <a href=\"#!\" class=\"waves-effect waves-light btn\" on:click=\"{initDate}\">Сгенерировать снова</a>\r\n        \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n         ","<script>\r\n    import { fade } from 'svelte/transition';\r\n\r\n    let userString = '';\r\n    let validationState = false;\r\n\r\n    String.prototype.isAlpha = function() {\r\n        return /^[a-zA-Z\\s]+$/.test(this);\r\n    }\r\n\r\n    function checkIsAlphaValide() {\r\n        validationState = userString.isAlpha();\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"row\" in:fade=\"{{delay: 50, duration: 300}}\">\r\n    <div class=\"col s12 m12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-content\">\r\n                <div class=\"card-header\">Вариант 24, задание 2</div>\r\n                <div class=\"task\">\r\n                    <p>Задание:</p>\r\n                    <blockquote>\r\n                    Для объекта String написать функцию isAlpha(), которая возвращает true, \r\n                    если строка состоит только из букв латинского алфавита, \r\n                    и false - в противном случае.\r\n                    </blockquote>\r\n                </div>\r\n                <div class=\"answer\">\r\n                    <p>Решение:</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col s12\">\r\n                                <input on:keyup={checkIsAlphaValide} bind:value={userString} type=\"text\">\r\n                                <span>введите строку</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    {#if userString.length > 0}\r\n                     <div transition:fade=\"{{delay: 150, duration: 300}}\">\r\n                        Результат: \r\n                        {#if validationState}\r\n                            <span>Строка содержит только буквы латинского алфавита</span>\r\n                        {:else}\r\n                            <span>Строка содержит буквы/символы не из латинского алфавита</span>\r\n                        {/if}\r\n                     </div>\r\n                    {/if}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n         ","<script>\r\n    import { fade } from 'svelte/transition';\r\n\r\n    let userString = '';\r\n\r\n    function capitalizeFirstLetter() {\r\n        userString = userString.charAt(0).toUpperCase() + userString.slice(1);\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"row\" in:fade=\"{{delay: 50, duration: 300}}\">\r\n    <div class=\"col s12 m12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-content\">\r\n                <div class=\"card-header\">Вариант 24, задание 3</div>\r\n                <div class=\"task\">\r\n                    <p>Задание:</p>\r\n                    <blockquote>\r\n                    Сделайте форму, в которой есть поля, для ввода фамилии, имени и отчества.\r\n                    Как только пользователь ввел информацию в любое из полей и перешел в другое \r\n                    (или просто кликнул мышкой на пустом месте), первая буква слова, записанного в поле, \r\n                    должна немедленно преобразоваться в заглавную. Т.е., если человек ввел \"иванов\" и \r\n                    перешел к вводу следующего поля, информация в поле \"фамилия\" должна быть \r\n                    автоматически исправлена на \"Иванов\". Обратите внимание, исправление должно \r\n                    быть внесено немедленно, как только поле потеряет фокус - не нужно дожидаться \r\n                    нажатия кнопок или других событий\r\n                    </blockquote>\r\n                </div>\r\n                <div class=\"answer\">\r\n                    <p>Решение:</p>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col s12\">\r\n                                <input  on:change={capitalizeFirstLetter} bind:value={userString} type=\"text\">\r\n                                <span>введите строку</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n         ","<script>\n\timport { onMount } from 'svelte';\n\t\n\timport Navbar from './components/Navbar.svelte';\n\timport Menu from './components/Menu.svelte';\n\timport News from './components/News.svelte';\n\timport Footer from './components/Footer.svelte';\n\timport Main from './pages/Main.svelte';\n\timport Task1 from './pages/Task1.svelte';\n\timport Task2 from './pages/Task2.svelte';\n\timport Task3 from './pages/Task3.svelte';\n\n\tonMount(() => {\n\t\tgetRouter();\n\t});\n\n\tlet elem = null;\n\tlet instance = null;\n\n\tlet currentRouter = 'main';\n\tlet pageHeader = getPageHeader();\n\tlet urlParams = new URLSearchParams(window.location.search);\n\n\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\telem = document.querySelector('.sidenav');\n\t\tinstance = M.Sidenav.init(elem);\n\t});\n\n\tfunction getRouter() {\n\t\tif (urlParams.has('route')) {\n\t\t\tlet route = urlParams.get('route');\n\t\t\tcurrentRouter = route;\n\t\t\tsetPageHeader(route);\n\t\t}\n\t}\n\n\tfunction setRouter(router) {\n\t\tinstance.close();\n\t\tupdateQueryState(router);\n\t\tcurrentRouter = router;\n\t\tsetPageHeader(router);\n\t}\n\n\tfunction updateQueryState(router) {\n\t\turlParams.set('route', router);\n\t\tlet newRelativePathQuery = window.location.pathname + '?' + urlParams.toString();\n\t\thistory.pushState(null, '', newRelativePathQuery);\n\t}\n\n\tfunction getPageHeader(router = currentRouter) {\n\t\tlet routerLabels = {\n\t\t\tmain: 'Главная страница',\n\t\t\ttask1: 'Задание 1',\n\t\t\ttask2: 'Задание 2',\n\t\t\ttask3: 'Задание 3'\n\t\t}\n\n\t\treturn routerLabels[router];\n\t}\n\n\tfunction setPageHeader(router = currentRouter) {\n\t\tpageHeader = getPageHeader(router);\n\t}\n\n\tfunction handleRouteFromEvent(event) {\n\t\tsetRouter(event.detail);\n\t}\n</script>\n\n<div class=\"wrapper\">\n\t<Navbar on:handleRoute={handleRouteFromEvent} />\n\t<Menu on:handleRoute={handleRouteFromEvent} />\n\t<div class=\"container page-wrapper\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col s12 m8\">\n\t\t\t<h4 class=\"page-header\">{pageHeader}</h4>\n\t\t\t{#if currentRouter === 'main'}\n\t\t\t\t<Main on:handleRoute={handleRouteFromEvent} />\n\t\t\t{:else if currentRouter === 'task1'}\n\t\t\t\t<Task1 />\n\t\t\t{:else if currentRouter === 'task2'}\n\t\t\t\t<Task2 />\n\t\t\t{:else if currentRouter === 'task3'}\n\t\t\t\t<Task3 />\n\t\t\t{:else}\n\t\t\t\t<p>Router not found</p>\n\t\t\t{/if}\n\t\t\t</div>\n\t\t\t<div class=\"col s12 m4\">\n\t\t\t\t<News />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<Footer on:handleRoute={handleRouteFromEvent} />\n</div>\n\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_client","window","now","performance","Date","raf","requestAnimationFrame","tasks","Set","stylesheet","running","run_tasks","task","delete","size","loop","promise","Promise","fulfil","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","to_number","undefined","set_data","set_style","key","style","setProperty","custom_event","type","detail","e","createEvent","initCustomEvent","current_component","active","current_rules","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","i","length","charCodeAt","head","sheet","insertRule","cssRules","animation","delete_rule","split","filter","anim","indexOf","join","deleteRule","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","createEventDispatcher","callbacks","slice","call","dirty_components","resolved_promise","resolve","update_scheduled","binding_callbacks","render_callbacks","flush_callbacks","add_render_callback","flush","seen_callbacks","shift","update","callback","pop","has","fragment","dirty","before_render","ctx","after_render","outros","wait","then","dispatch","direction","kind","dispatchEvent","group_outros","remaining","check_outros","on_outro","create_in_transition","params","animation_name","config","cleanup","go","easing","tick","tick$$1","css","start_time","end_time","abort","now$$1","started","create_bidirectional_transition","intro","running_program","pending_program","clear_animation","init","program","d","Math","abs","start","end","group","mount_component","on_destroy","m","new_on_destroy","map","make_dirty","instance","create_fragment","not_equal$$1","prop_names","parent_component","props","not_equal","bound","context","Map","ready","hydrate","l","Array","from","childNodes","c","SvelteComponent","detaching","this","$destroy","index","splice","fade","o","getComputedStyle","opacity","title","image","link","singleNews","news","iterations","year","getFullYear","btnText","innerWidth","randomDate","day","month","week","initDate","minYear","maxYear","monthDays","0","1","2","3","4","5","6","7","8","9","10","11","monthLabels","weekLabels","generateDateTime","random","toFixed","generateRandomDayByMonth","generatedDateTime","getMonth","getDate","getDay","validationState","userString","checkIsAlphaValide","String","prototype","isAlpha","test","capitalizeFirstLetter","charAt","toUpperCase","handleRouteFromEvent","currentRouter","pageHeader","urlParams","route","get","setPageHeader","getRouter","elem","getPageHeader","URLSearchParams","location","search","setRouter","router","close","set","newRelativePathQuery","pathname","toString","history","pushState","updateQueryState","main","task1","task2","task3","querySelector","M","Sidenav","body"],"mappings":"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"}